{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","// app.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-qr-code-tutorial';\r\n\r\n  public qrdata: string = null;\r\n  public level: 'L' | 'M' | 'Q' | 'H';\r\n  public width: number;\r\n  private backendurl: string = 'http://localhost:3000';\r\n  isLinear = true;\r\n  isShow = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  collegeFormGroup: FormGroup;\r\n  branchFormGroup: FormGroup;\r\n  semFormGroup: FormGroup;\r\n  classNoFormGroup: FormGroup;\r\n\r\n  public qrcode: string = null;\r\n  public subject: string = null;\r\n  public college: string = null;\r\n  public branch: string = null;\r\n  public semester: string = null;\r\n  public date: string = null;\r\n  public myInterval = null;\r\n  public classNumber: string = null;\r\n  public otp: string = null;\r\n  public qrData = {\r\n    college: 'IIITA',\r\n    subject: 'LAL',\r\n    date: '2022-08-12',\r\n    classNumber: '2',\r\n    otp: '123',\r\n    qrGenTime: 10000,\r\n  };\r\n  constructor(private _formBuilder: FormBuilder, private http: HttpClient) {\r\n    this.level = 'H';\r\n    this.qrcode = '';\r\n    this.width = 256;\r\n  }\r\n  ngOnInit() {\r\n    let r = Math.floor(Math.random() * 10000);\r\n    this.qrData['otp'] = r.toString();\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      subCtrl: ['', Validators.required],\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      dateCtrl: ['', Validators.required],\r\n    });\r\n    this.collegeFormGroup = this._formBuilder.group({\r\n      collegeCtrl: ['', Validators.required],\r\n    });\r\n    this.branchFormGroup = this._formBuilder.group({\r\n      branchCtrl: ['', Validators.required],\r\n    });\r\n    this.semFormGroup = this._formBuilder.group({\r\n      semCtrl: ['', Validators.required],\r\n    });\r\n    this.classNoFormGroup = this._formBuilder.group({\r\n      classNoCtrl: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  changeOTP() {\r\n    let r = Math.floor(Math.random() * 10000);\r\n    this.qrData['otp'] = r.toString();\r\n    this.otp= r.toString();\r\n\r\n\r\n    const d = new Date();\r\n    this.qrData['qrGenTime'] = d.getTime();\r\n    this.qrcode = JSON.stringify(this.qrData);\r\n    let body = new URLSearchParams();\r\n    body.set('college', this.college);\r\n    body.set('branch', this.branch);\r\n    body.set('faculty', 'DABB');\r\n    body.set('date', this.date.toString());\r\n    body.set('classCount', this.classNumber);\r\n    body.set('subject', this.subject);\r\n    body.set('semester', this.semester);\r\n\r\n    let head = new HttpHeaders();\r\n    head.set('Content-Type', 'application/x-www-form-urlencoded');\r\n    head.set('QROTP', this.otp);\r\n    let options = {\r\n      headers: head,\r\n    };\r\n    this.http\r\n    .post(this.backendurl+'/faculty/qr', body.toString(), options)\r\n    .subscribe(response => {\r\n        console.log(response)\r\n    });\r\n\r\n    console.log(this.qrData);\r\n  }\r\n\r\n  everyTime() {\r\n    document.getElementById('submit').click();\r\n\r\n  }\r\n\r\n  changeQrdata() {\r\n    this.qrData['subject'] = this.subject;\r\n    this.qrData['college'] = this.college;\r\n    this.qrData['date'] = this.date;\r\n    this.qrData['classNumber'] = this.classNumber;\r\n    let r = Math.floor(Math.random() * 10000);\r\n    this.qrData['otp'] = r.toString();\r\n    this.otp = r.toString();\r\n    const d = new Date();\r\n    this.qrData['qrGenTime'] = d.getTime();\r\n    this.qrcode = JSON.stringify(this.qrData);\r\n\r\n    this.isShow = true;\r\n    this.myInterval = setInterval(this.everyTime, 5000);\r\n  }\r\n\r\n  deleteQR() {\r\n    this.isShow = false;\r\n    clearInterval(this.myInterval);\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <span>Generate QR-Code</span>\r\n</mat-toolbar>\r\n\r\n<div class=\"container\">\r\n  <div class=\"qrDataForm\">\r\n    <mat-vertical-stepper [linear]=\"isLinear\" #stepper>\r\n      <mat-step [stepControl]=\"collegeFormGroup\">\r\n        <form [formGroup]=\"collegeFormGroup\">\r\n          <ng-template matStepLabel>Enter College</ng-template>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>College</mat-label>\r\n            <input\r\n              matInput\r\n              placeholder=\"College\"\r\n              formControlName=\"collegeCtrl\"\r\n              [(ngModel)]=\"college\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"branchFormGroup\">\r\n        <form [formGroup]=\"branchFormGroup\">\r\n          <ng-template matStepLabel>Enter Branch</ng-template>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Branch</mat-label>\r\n            <input\r\n              matInput\r\n              placeholder=\"Branch\"\r\n              formControlName=\"branchCtrl\"\r\n              [(ngModel)]=\"branch\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"semFormGroup\">\r\n        <form [formGroup]=\"semFormGroup\">\r\n          <ng-template matStepLabel>Enter Semester</ng-template>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Semester</mat-label>\r\n            <input\r\n              matInput\r\n              placeholder=\"Sem\"\r\n              formControlName=\"semCtrl\"\r\n              [(ngModel)]=\"semester\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"firstFormGroup\">\r\n        <form [formGroup]=\"firstFormGroup\">\r\n          <ng-template matStepLabel>Enter Subject</ng-template>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Subject</mat-label>\r\n            <input\r\n              matInput\r\n              placeholder=\"Subject\"\r\n              formControlName=\"subCtrl\"\r\n              [(ngModel)]=\"subject\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"secondFormGroup\" label=\"Select Date\">\r\n        <form [formGroup]=\"secondFormGroup\">\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Choose a date</mat-label>\r\n            <input\r\n              matInput\r\n              [matDatepicker]=\"picker\"\r\n              formControlName=\"dateCtrl\"\r\n              [(ngModel)]=\"date\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              matSuffix\r\n              [for]=\"picker\"\r\n              required\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"classNoFormGroup\">\r\n        <form [formGroup]=\"classNoFormGroup\">\r\n          <ng-template matStepLabel>\r\n            Class Number on the above date</ng-template\r\n          >\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label> Class Number on the above date</mat-label>\r\n            <input\r\n              matInput\r\n              placeholder=\"Class Number\"\r\n              formControlName=\"classNoCtrl\"\r\n              [(ngModel)]=\"classNumber\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Submit</ng-template>\r\n\r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button (click)=\"changeQrdata()\">Generate QR</button>\r\n        </div>\r\n      </mat-step>\r\n    </mat-vertical-stepper>\r\n    \r\n  </div>\r\n  <div class=\"qr\" *ngIf=\"isShow\">\r\n    <qr-code [value]=\"qrcode\" [size]=\"width\" [level]=\"level\"></qr-code>\r\n    <button id=\"submit\" mat-button (click)=\"changeOTP()\"></button>\r\n    <div class=\"deleteBtn\">\r\n    <button  mat-raised-button color=\"primary\"  (click)=\"deleteQR() \">\r\n      Delete QR\r\n    </button>\r\n  </div>\r\n  </div>\r\n  \r\n</div>\r\n","// app.module.ts\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { QRCodeModule } from 'angular2-qrcode';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatStepperModule} from '@angular/material/stepper';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    QRCodeModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule\r\n  ],\r\n  providers: [{provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill'}}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}